.container {
    appearance: none;
    -webkit-appearance: none;
    display: flex;
    gap: calc(var(--layout-block-padding) / 4);
    padding: calc(var(--layout-block-padding) / 2) var(--layout-block-padding);
    border-radius: var(--border-radius);
    border-width: var(--border-width);
    border-style: solid;
    text-transform: uppercase;
    font-weight: 700;
    font-family: var(--font-heading);
    transition:
        250ms ease-in-out background-color,
        250ms ease-in-out border-color,
        250ms ease-in-out color,
        250ms ease-in-out filter;

    &:not(:disabled, [aria-disabled='true']) {
        cursor: pointer;
    }

    &[data-color='default'] {
        --button-accent: var(--color-foreground-secondary); // TODO: Decide on a default color.
        --button-foreground: var(--color-foreground); // TODO: Decide on a default color.
    }
    &[data-color='primary'] {
        --button-accent: var(--color-accent-primary);
        --button-foreground: var(--color-foreground); // TODO: Get the contrasting color from the theme.
    }
    &[data-color='secondary'] {
        --button-accent: var(--color-accent-secondary);
        --button-foreground: var(--color-foreground); // TODO: Get the contrasting color from the theme.
    }

    &[data-variant='solid'] {
        background-color: var(--button-accent);
        border-color: var(--button-accent);
        color: var(--button-foreground);

        &:is(:hover, :active) {
            filter: brightness(80%);
        }
    }

    &[data-variant='outline'] {
        background-color: transparent;
        border-color: var(--button-accent);
        color: var(--button-accent);

        &:is(:hover, :active) {
            background-color: var(--button-accent);
            color: var(--button-foreground);
        }
    }

    .content {
    }
}
