.container {
    &:is([data-variant='outline'], :not([data-variant])) {
        border-width: var(--border-width-small);

        &:not(:is([data-color='primary'], [data-color='secondary'])) {
            &[data-color='default'] {
                --color: hsl(var(--color-foreground-secondary));
                --color-highlight: hsl(var(--color-foreground-secondary));
            }

            &[data-color='foreground'] {
                --color: hsl(var(--color-foreground-secondary));
                --color-highlight: hsl(var(--color-foreground));
            }

            & {
                border-color: var(--color);
            }

            .label {
                color: var(--color);
            }

            :is(:focus, :focus-within) > & {
                border-color: hsl(var(--color-highlight));
            }
        }

        &[data-color='primary'] {
            border-color: hsl(var(--color-accent-primary));
        }
        &[data-color='secondary'] {
            border-color: hsl(var(--color-accent-secondary));
        }

        &:is([data-color='primary'], [data-color='secondary']) {
            opacity: 0.85;

            :is(:focus, :focus-within) > & {
                opacity: 1;
            }
        }

        &:is(:not(:has(.input[value=''], .input:not([value]))), :focus, :focus-within):not(:has(.input:invalid)) {
            opacity: 1;

            &[data-color='default'] {
                border-color: hsl(var(--color-foreground));
            }

            .label {
                color: inherit;
            }
        }

        &:has(.input:invalid) {
            opacity: 1;

            border-color: var(--color-error);
            color: var(--color-error);

            .input::placeholder {
                color: var(--color-error);
            }
        }
    }

    &:is([data-variant='solid'], :not([data-variant])) {
        --background: hsl(var(--color-foreground));
        --foreground: hsl(var(--color-background));

        &[data-color='primary'] {
            --background: hsl(var(--color-accent-primary));
            --foreground: hsl(var(--color-accent-primary-foreground));
        }
        &[data-color='secondary'] {
            --background: hsl(var(--color-accent-secondary));
            --foreground: hsl(var(--color-accent-secondary-foreground));
        }

        border-width: var(--border-width-small);
        border-color: var(--background);

        color: var(--foreground);
        background: var(--background);
    }
}
